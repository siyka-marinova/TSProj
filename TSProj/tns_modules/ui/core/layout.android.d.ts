import definition = require("ui/core/layout");
import geometry = require("utils/geometry");
import view = require("ui/core/view");
export declare class LayoutInfo implements definition.LayoutInfo {
    private _minSize;
    private _size;
    private _maxSize;
    private _view;
    private availableSize;
    public desiredSize: geometry.Size;
    public renderSize: geometry.Size;
    private _margin;
    private _horizontalAlignment;
    private _verticalAlignment;
    public needsClipBounds: boolean;
    public unclippedDesiredSize: geometry.Size;
    public visualOffset: geometry.Point;
    public finalRect: geometry.Rect;
    constructor(view: view.View);
    static isMaxWidthHeightValid(value: number): boolean;
    static isMinWidthHeightValid(value: number): boolean;
    static isWidthHeightValid(value: number): boolean;
    public view : view.View;
    public parent : view.View;
    public width : number;
    public height : number;
    public maxWidth : number;
    public maxHeight : number;
    public minHeight : number;
    public minWidth : number;
    public setMinSize(minWidth: number, minHeight: number): void;
    public setMaxSize(maxWidth: number, maxHeight: number): void;
    public setSize(width: number, height: number): void;
    public horizontalAlignment : number;
    public verticalAlignment : number;
    public margin : geometry.Thickness;
    public isVisible : boolean;
    public nativeView : android.view.View;
    public invalidateMeasure(): void;
    public invalidateArrange(): void;
    public measure(availableSize: geometry.Size, options?: any): void;
    public measureCore(availableSize: geometry.Size, options?: any): geometry.Size;
    public arrange(finalRect: geometry.Rect, options?: any): void;
    public arrangeCore(finalRect: geometry.Rect): void;
    public computeAlignmentOffset(clientSize: geometry.Size, renderSize: geometry.Size): geometry.Point;
    public updateLayout(): void;
    static propagateSuspendLayout(layout: LayoutInfo): void;
    static propagateResumeLayout(parent: LayoutInfo, layout: LayoutInfo): void;
}
